---
description: Core conventions, repo tasks, and coding standards for the monorepo
globs:
  - "**/*"
---

# Project-wide Conventions

- Use TypeScript strict mode everywhere.
- Prefer functional, small modules. Avoid long classes.
- Always write a short JSDoc for exported functions and types.
- Do not hardcode env secrets; read from process.env with typed helpers.

# Documentation coupling (MANDATORY)

- When making changes that affect developer setup or DX, you MUST update `README.md` in the same change set.
- This includes any modifications to:
  - scripts under `package.json` or `scripts/*`
  - environment variables, defaults, or required values
  - ports, URLs, or API base paths
  - project bootstrap instructions, CI commands, or tooling versions
- If you add a new script or flag, document usage and expected outcomes in `README.md`.

# Tasks

- `pnpm dev`: run all dev servers (web + api).
- `pnpm build`, `pnpm test`, `pnpm lint`, `pnpm typecheck` use Turborepo.

# Files & Paths

- Shared code is in `packages/shared`. Import with `@shared/*` path alias.

# Commit Hygiene

- Keep PRs small. Add/adjust tests with code changes.

# TypeScript & Lint

- Strict TypeScript across the monorepo. `any` is forbidden.
- Fix ESLint and type errors before committing.

# Comprehensive Documentation

- **Architecture**: See `docs/ARCHITECTURE.md` for monorepo structure, design patterns, and configuration management.
- **Development**: See `docs/DEVELOPMENT.md` for detailed development patterns, code organization, and best practices.
- **Security**: See `docs/SECURITY.md` for security best practices and vulnerability reporting.
- **Contributing**: See `CONTRIBUTING.md` for contribution guidelines and development standards.
