---
description: Rules for Express API, Mongo models, routing, and validation
globs:
  - "apps/api/**"
---

# API Rules

- Use Express routers per resource under `apps/api/src/routes/*`.
- Validate all request bodies with Zod before DB writes.
- Use Mongoose models in `apps/api/src/models/*`. Keep schemas minimal.
- API is mounted under `/api`; keep this consistent with web defaults and `README.md`.

# Error Handling

- Fail fast on validation with 400 and formatted zod error.
- Log server errors with pino; never leak stack traces to clients.

# Testing

- For routes, write Vitest + Supertest specs in `__tests__`.

# Environment & Docs

- Validate env with Zod in `apps/api/src/config/env.ts`. Any new env var must be documented in `README.md` with defaults or examples.
- When adding routes, ensure OpenAPI docs remain accessible and update `README.md` endpoints if developer-facing.

# Comprehensive Documentation

- **API Development**: See `docs/DEVELOPMENT.md` for detailed API patterns, error handling, database models, and testing examples.
- **Architecture**: See `docs/ARCHITECTURE.md` for API design patterns, security considerations, and performance optimization.
- **Security**: See `docs/SECURITY.md` for API security best practices and vulnerability reporting.
