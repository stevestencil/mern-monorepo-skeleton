# Development Docker Compose
# Usage: docker-compose -f docker-compose.dev.yml up

services:
  # Development MongoDB
  mongo:
    image: mongo:7
    restart: unless-stopped
    volumes:
      - mongo_dev_data:/data/db
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=mern_dev

  # Test MongoDB (for integration tests)
  mongo-test:
    image: mongo:7
    restart: "no"
    volumes:
      - mongo_test_data:/data/db
    ports:
      - "27018:27017"
    environment:
      - MONGO_INITDB_DATABASE=mern_test
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s

  # Development API
  api-dev:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    environment:
      - NODE_ENV=development
      - PORT=4000
      - MONGODB_URI=mongodb://mongo:27017/mern_dev
    depends_on:
      - mongo
    ports:
      - "4000:4000"
    volumes:
      - ./apps/api:/app
      - /app/node_modules
    command: ["pnpm", "dev"]

  # Development Web
  web-dev:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:4000
    depends_on:
      - api-dev
    ports:
      - "5173:5173"
    volumes:
      - ./apps/web:/app
      - /app/node_modules
    command: ["pnpm", "dev"]

volumes:
  mongo_dev_data:
  mongo_test_data:
